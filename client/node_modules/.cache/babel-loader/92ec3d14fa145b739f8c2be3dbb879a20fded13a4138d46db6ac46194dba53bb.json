{"ast":null,"code":"var _jsxFileName = \"C:\\\\STUDY\\\\JS\\\\SaleMoto\\\\client\\\\src\\\\Pages\\\\TestDriveForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestDriveForm = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [motorcycles, setMotorcycles] = useState([]);\n  const [testDriveInfo, setTestDriveInfo] = useState({\n    user_id: '',\n    motorcycle_id: '',\n    status: 'заказан'\n  });\n  const [successMessage, setSuccessMessage] = useState('');\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/users');\n        setUsers(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const fetchMotorcycles = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/products/motorcycles');\n        setMotorcycles(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchUsers();\n    fetchMotorcycles();\n  }, []);\n  const handleTestDriveSubmit = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/orders/test-drives', testDriveInfo);\n      if (response.status === 201) {\n        setSuccessMessage('Тест-драйв успешно оформлен!');\n        // Здесь можете сбросить форму или выполнить другие действия после успешного оформления тест-драйва\n      } else {\n        console.error('Ошибка при создании тест-драйва');\n      }\n    } catch (error) {\n      console.error('Ошибка при создании тест-драйва', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"userSelect\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: testDriveInfo.user_id,\n              onChange: e => setTestDriveInfo({\n                ...testDriveInfo,\n                user_id: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: user.id,\n                children: user.username\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"motorcycleSelect\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043C\\u043E\\u0442\\u043E\\u0446\\u0438\\u043A\\u043B \\u0434\\u043B\\u044F \\u0442\\u0435\\u0441\\u0442-\\u0434\\u0440\\u0430\\u0439\\u0432\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: testDriveInfo.motorcycle_id,\n              onChange: e => setTestDriveInfo({\n                ...testDriveInfo,\n                motorcycle_id: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043C\\u043E\\u0442\\u043E\\u0446\\u0438\\u043A\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), motorcycles.map(motorcycle => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: motorcycle.id,\n                children: `${motorcycle.brand} ${motorcycle.model}`\n              }, motorcycle.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleTestDriveSubmit,\n            children: \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442-\\u0434\\u0440\\u0430\\u0439\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: successMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TestDriveForm, \"YhORpjP38hbs2vU+qi5xVrtyEVw=\");\n_c = TestDriveForm;\nexport default TestDriveForm;\nvar _c;\n$RefreshReg$(_c, \"TestDriveForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","Form","Button","Container","Row","Col","jsxDEV","_jsxDEV","TestDriveForm","_s","users","setUsers","motorcycles","setMotorcycles","testDriveInfo","setTestDriveInfo","user_id","motorcycle_id","status","successMessage","setSuccessMessage","fetchUsers","response","get","data","error","console","fetchMotorcycles","handleTestDriveSubmit","post","children","md","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","value","onChange","e","target","map","user","id","username","motorcycle","brand","model","variant","onClick","_c","$RefreshReg$"],"sources":["C:/STUDY/JS/SaleMoto/client/src/Pages/TestDriveForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst TestDriveForm = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [motorcycles, setMotorcycles] = useState([]);\r\n  const [testDriveInfo, setTestDriveInfo] = useState({\r\n    user_id: '',\r\n    motorcycle_id: '',\r\n    status: 'заказан',\r\n  });\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/users');\r\n        setUsers(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    const fetchMotorcycles = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/products/motorcycles');\r\n        setMotorcycles(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n    fetchMotorcycles();\r\n  }, []);\r\n\r\n  const handleTestDriveSubmit = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/orders/test-drives', testDriveInfo);\r\n\r\n      if (response.status === 201) {\r\n        setSuccessMessage('Тест-драйв успешно оформлен!');\r\n        // Здесь можете сбросить форму или выполнить другие действия после успешного оформления тест-драйва\r\n      } else {\r\n        console.error('Ошибка при создании тест-драйва');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при создании тест-драйва', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Form>\r\n            <Form.Group controlId=\"userSelect\">\r\n              <Form.Label>Выберите пользователя:</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={testDriveInfo.user_id}\r\n                onChange={(e) => setTestDriveInfo({ ...testDriveInfo, user_id: e.target.value })}\r\n              >\r\n                <option value=\"\">Выберите пользователя</option>\r\n                {users.map((user) => (\r\n                  <option key={user.id} value={user.id}>\r\n                    {user.username}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"motorcycleSelect\">\r\n              <Form.Label>Выберите мотоцикл для тест-драйва:</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={testDriveInfo.motorcycle_id}\r\n                onChange={(e) => setTestDriveInfo({ ...testDriveInfo, motorcycle_id: e.target.value })}\r\n              >\r\n                <option value=\"\">Выберите мотоцикл</option>\r\n                {motorcycles.map((motorcycle) => (\r\n                  <option key={motorcycle.id} value={motorcycle.id}>\r\n                    {`${motorcycle.brand} ${motorcycle.model}`}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" onClick={handleTestDriveSubmit}>\r\n              Оформить тест-драйв\r\n            </Button>\r\n\r\n            {successMessage && (\r\n              <div>\r\n                <p>{successMessage}</p>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TestDriveForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}